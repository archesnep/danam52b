version: '3.3'
services:

    arches:
      container_name: arches
      image: asisgtm/arches:5.2.b
      build:
        context: .
        dockerfile: ./Dockerfile
      command: run_arches
      volumes:
        - arches-log:/arches/arches/logs
        - arches-static:/static_root
        - ./docker:/web_root/docker
        - ./danam:/web_root/danam
        - arches-uploadedfiles:/web_root/danam/danam/uploadedfiles
        - ./docker/entrypoint.sh:/web_root/entrypoint.sh
      env_file:
        - ./docker/env_file.env
      ports:
        - '127.0.0.1:8000:8000'
      depends_on:
        - db
        - elasticsearch
        - couchdb
        - rabbitmq

    nginx:
      container_name: nginx
      image: asisgtm/nginx:1.1
      restart: unless-stopped
      ports:
        - '80:80'
        - '443:443'
      volumes:
        - arches-uploadedfiles:/www/media
        - arches-static:/www/static
        - letsencrypt-acme-challenge:/var/www
        - letsencrypt:/etc/letsencrypt
        - ./install:/install
        - ./cart-html:/www/html/

      env_file:
        - ./docker/env_file.env
      depends_on:
        - arches
        - fpm

    db:
      container_name: db
      image: kartoza/postgis:13-3.1
      volumes:
        - postgres-data:/var/lib/postgresql
        - postgres-log:/var/log/postgresql
        - ./arches/install/init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
      ports:
        - '127.0.0.1:5432:5432'
      env_file:
        - ./docker/env_file.env

    couchdb:
      container_name: couchdb
      image: couchdb:3.1.1
      ports:
        - "127.0.0.1:5984:5984"
      env_file:
        - ./docker/env_file.env
      volumes:
        - couchdb-data:/usr/local/var/lib/couchdb
        - couchdb-log:/usr/local/var/log/couchdb

    elasticsearch:
      container_name: elasticsearch
      image: elasticsearch:7.14.0
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
      ports:
        - "127.0.0.1:9200:9200"
        - "127.0.0.1:9300:9300"
      env_file:
        - ./docker/env_file.env

    rabbitmq:
      image: rabbitmq:3.9.5-management
      container_name: rabbitmq
      privileged: true
      volumes:
        - rabbitmq-data:/var/lib/rabbitmq/
        - rabbitmq-log:/var/log/rabbitmq/
        #  - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        #  - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        #  - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
      env_file:
        - ./docker/env_file.env
      ports:
        - "127.0.0.1:5672:5672"
        - "127.0.0.1:15672:15672"

    letsencrypt:
      container_name: letsencrypt
      image: asisgtm/letsencrypt:1.0
      volumes:
        - letsencrypt-acme-challenge:/var/www
        - letsencrypt:/etc/letsencrypt
        - letsencrypt-log:/var/log/letsencrypt
      command: get_certificate
      env_file:
        - ./docker/env_file.env

    mariadb:
      container_name: mariadb
      image: docker.io/bitnami/mariadb:10.3
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
        - MARIADB_USER=bn_opencart
        - MARIADB_DATABASE=bitnami_opencart
      volumes:
        - 'mariadb_data:/bitnami/mariadb'

    fpm:
      container_name: fpm
      image: bitnami/opencart:3.0.3-6
      ports:
        - "127.0.0.1:8080:8080"
        - "127.0.0.1:9000:443"
      environment:
      - OPENCART_HOST=nhdp-test.kjc.uni-heidelberg.de/bazaar
      - OPENCART_DATABASE_HOST=mariadb
      - OPENCART_DATABASE_PORT_NUMBER=3306
      - OPENCART_DATABASE_USER=bn_opencart
      - OPENCART_DATABASE_NAME=bitnami_opencart
      - ALLOW_EMPTY_PASSWORD=yes
      - NAMI_DEBUG="--log-level=debug"
      volumes:
        - 'opencart_data:/bitnami/opencart'
        - 'opencart_storage_data:/bitnami/opencart_storage/'
      depends_on:
        - mariadb

volumes:
    arches-log:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/arches-log
    arches-static:
      driver: local-persist
      driver_opts:
        mountpoint: /media/static
    arches-uploadedfiles: 
      driver: local-persist
      driver_opts:
        mountpoint: /srv/uploadedfiles
    couchdb-data:
    couchdb-log:
    postgres-data:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/postgres-data
    postgres-log:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/postgres-log
    elasticsearch-data:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/elasticsearch-data
    rabbitmq-data:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/rabbitmq-data
    rabbitmq-log:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/rabbitmq-log
    letsencrypt:
      driver: local-persist
      driver_opts:
        mountpoint: /media/volumes/letsencrypt
    letsencrypt-log:
    letsencrypt-acme-challenge:
    mariadb_data:
      driver: local
    opencart_data:
      driver: local
    opencart_storage_data:
      driver: local